# Generated by Django 3.1.2 on 2020-10-11 16:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('announcementid', models.AutoField(db_column='announcementID', primary_key=True, serialize=False)),
                ('text', models.CharField(max_length=45)),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'announcement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Answerchoice',
            fields=[
                ('answerid', models.AutoField(db_column='answerID', primary_key=True, serialize=False)),
                ('text', models.CharField(max_length=45)),
                ('is_right', models.IntegerField()),
            ],
            options={
                'db_table': 'answerChoice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('assignmentid', models.AutoField(db_column='assignmentID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=45)),
                ('description', models.CharField(max_length=45)),
                ('start_date', models.DateTimeField()),
                ('due_date', models.DateTimeField()),
                ('max_point', models.IntegerField()),
            ],
            options={
                'db_table': 'assignment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('courseid', models.AutoField(db_column='courseID', primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=45)),
                ('credits', models.IntegerField()),
                ('level', models.IntegerField()),
                ('description', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'course',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Coursepagemodule',
            fields=[
                ('moduleid', models.AutoField(db_column='moduleID', primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=45)),
                ('order', models.IntegerField()),
            ],
            options={
                'db_table': 'coursePageModule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Coursesection',
            fields=[
                ('sectionid', models.AutoField(db_column='sectionID', primary_key=True, serialize=False)),
                ('num_type', models.CharField(max_length=45)),
                ('start_time', models.CharField(max_length=45)),
                ('end_time', models.CharField(max_length=45)),
                ('semester', models.CharField(max_length=45)),
                ('capacity', models.IntegerField()),
                ('room', models.CharField(max_length=45)),
                ('total_points', models.IntegerField()),
            ],
            options={
                'db_table': 'courseSection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('name', models.CharField(max_length=45, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'department',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Discussion',
            fields=[
                ('discussionid', models.AutoField(db_column='discussionID', primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'discussion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('fileid', models.AutoField(db_column='fileID', primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=45)),
                ('placeid', models.CharField(db_column='placeID', max_length=45)),
                ('url', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'file',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('position', models.CharField(max_length=45)),
                ('instructorid', models.AutoField(db_column='instructorID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'instructor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('quizid', models.AutoField(db_column='quizID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=45)),
                ('description', models.CharField(max_length=45)),
                ('open_time', models.TimeField()),
                ('close_time', models.TimeField()),
                ('time_limit', models.TimeField()),
                ('max_poit', models.IntegerField()),
            ],
            options={
                'db_table': 'quiz',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Quizquestion',
            fields=[
                ('questionid', models.AutoField(db_column='questionID', primary_key=True, serialize=False)),
                ('text', models.CharField(max_length=45)),
                ('is_open', models.IntegerField()),
                ('points', models.IntegerField()),
            ],
            options={
                'db_table': 'quizQuestion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Registrationdate',
            fields=[
                ('registrationid', models.AutoField(db_column='registrationID', primary_key=True, serialize=False)),
                ('priority', models.IntegerField()),
                ('year', models.IntegerField()),
                ('open_time', models.CharField(max_length=45)),
                ('close_time', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'registrationDate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('name', models.CharField(max_length=45, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'school',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('level', models.CharField(max_length=45)),
                ('year_of_study', models.IntegerField()),
                ('academic_status', models.CharField(max_length=45)),
                ('schedule_approve', models.IntegerField()),
                ('schedule_lock', models.IntegerField()),
                ('studentid', models.AutoField(db_column='studentID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'student',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('userid', models.AutoField(db_column='userID', primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=45)),
                ('last_name', models.CharField(max_length=45)),
                ('email', models.CharField(max_length=45)),
                ('password', models.CharField(max_length=45)),
                ('phone_number', models.CharField(blank=True, max_length=45, null=True)),
                ('profile_photo', models.CharField(max_length=45)),
                ('gender', models.CharField(max_length=45)),
                ('role', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Advice',
            fields=[
                ('instructor_instructorid', models.OneToOneField(db_column='instructor_instructorID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.instructor')),
            ],
            options={
                'db_table': 'advice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnnouncementNotification',
            fields=[
                ('user_userid', models.OneToOneField(db_column='user_userID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.user')),
                ('time', models.TimeField()),
                ('is_turned_on', models.IntegerField()),
                ('notify_object_id', models.IntegerField()),
            ],
            options={
                'db_table': 'announcement_notification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Assignmentsubmission',
            fields=[
                ('date', models.DateField(blank=True, null=True, unique=True)),
                ('points', models.CharField(blank=True, max_length=45, null=True, unique=True)),
                ('feedback', models.CharField(blank=True, max_length=45, null=True)),
                ('assignment_assignmentid', models.OneToOneField(db_column='assignment_assignmentID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.assignment')),
            ],
            options={
                'db_table': 'assignmentSubmission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CourseGrades',
            fields=[
                ('student_studentid', models.OneToOneField(db_column='student_studentID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.student')),
                ('midterm_grade', models.CharField(blank=True, max_length=45, null=True)),
                ('final_grade', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'course_grades',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CourseInstructor',
            fields=[
                ('instructor_instructorid', models.OneToOneField(db_column='instructor_instructorID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.instructor')),
            ],
            options={
                'db_table': 'course_instructor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('user_userid', models.OneToOneField(db_column='user_userID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.user')),
                ('text', models.CharField(max_length=45)),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'post',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Priority',
            fields=[
                ('type', models.CharField(max_length=45)),
                ('year', models.IntegerField()),
                ('course_courseid', models.OneToOneField(db_column='course_courseID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.course')),
            ],
            options={
                'db_table': 'priority',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Quizsubmission',
            fields=[
                ('student_studentid', models.OneToOneField(db_column='student_studentID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.student')),
            ],
            options={
                'db_table': 'quizSubmission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Requisite',
            fields=[
                ('course_courseid', models.OneToOneField(db_column='course_courseID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.course')),
                ('type', models.CharField(max_length=45)),
                ('is_optional', models.IntegerField()),
            ],
            options={
                'db_table': 'requisite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sectionday',
            fields=[
                ('coursesection_sectionid', models.OneToOneField(db_column='courseSection_sectionID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.coursesection')),
                ('day', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'sectionDay',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentEnrollment',
            fields=[
                ('student_studentid', models.OneToOneField(db_column='student_studentID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.student')),
            ],
            options={
                'db_table': 'student_enrollment',
                'managed': False,
            },
        ),
    ]
